<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                 
<mapper namespace="com.humuson.push2u.push.dao.PushDao">

    <!-- 최근 푸시 목록 가져오기 -->
    <select id="getRecentList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT PUSH_TITLE, CAM_ID
		FROM PUSH_CAMPAIGNS
		WHERE USER_ID = #{userId}
		AND MSG_TYPE = #{msgType}
		ORDER BY REQ_DATE DESC
		LIMIT 0, 15
    </select>
    
    <!-- 푸시 템플릿 가져오기 -->
    <select id="getRecentTemplete" parameterType="int" resultType="java.util.Map">
        SELECT PUSH_TITLE, PUSH_MSG, POPUP_CONTENT, INAPP_CONTENT
		FROM PUSH_CAMPAIGNS
		WHERE CAM_ID = #{camId}
    </select>
    
    <!-- 앱 유저 리스트 가져오기 -->
	<select id="getAppUserList" resultType="java.util.Map">
		SELECT CUST_ID, PHONE_NUM
		FROM APP_USERS;	    
	</select>
	
	<!-- MAX 캠페인 아이디 가져오기 -->
	<select id="getMaxCamId" resultType="int">
	    SELECT MAX(CAM_ID)
		FROM push_campaigns;
	</select>
	
	<!-- MAX 푸시 아이디 가져오기 -->
	<select id="getMaxPushId" resultType="int">
	    SELECT MAX(PUSH_ID)
		FROM push_detail;
	</select>
	
	<!-- 캠페인 정보 INSERT -->
	<insert id="insertCampaign" parameterType="java.util.Map">
	    INSERT INTO push_campaigns (USER_ID, MSG_TYPE, PUSH_TITLE, POPUP_CONTENT, PUSH_MSG, INAPP_CONTENT, REQ_DATE, SMS_YN, SMS_CONTENT, PHONE_NUM, TARGET_CNT)
		VALUES (#{userId}, #{msgType}, #{pushTitle}, #{popupContents}, #{pushMsg}, #{inAppcontents}, SYSDATE(), #{smsYN}, #{smsContents}, #{phoneNum}, #{targetCnt});
	</insert>
	
	<!-- 캠페인 디테일 insert -->
	<insert id="insertPushDetail">
	    INSERT INTO PUSH_DETAIL (CAM_ID, REQ_UID, CUST_ID, RTN_TYPE, RES_DATE)
		VALUES (#{camId}, #{reqUid}, #{custId}, 'N', DATE_FORMAT(SYSDATE(), '%Y%m%d%H%i%s'))
	</insert>
	
	<!-- 푸시 로그 가져오기 -->
	<select id="getPushDetailList" parameterType="int" resultType="java.util.Map">
	    SELECT ID, REQ_UID, CUST_ID, RTN_TYPE, RES_CD, RES_DATE, DATA
		FROM TB_SEND_QUE_LOG
		WHERE BIZ_ID = '2fa2cd24481642f190919a4edf64f653'
		AND ID > #{maxPushId};
	</select>
	
	<!-- 푸시 로그 INSERT -->
	<insert id="insertPushLog" parameterType="java.util.Map">
	    INSERT INTO PUSH_DETAIL (CAM_ID, PUSH_ID, REQ_UID, CUST_ID, RTN_TYPE, RES_CD, RES_DATE, SMS_SEND_YN, DATA)
	    <choose>
	        <when test='RTN_TYPE.equals("S")'>
	            VALUES (#{CAM_ID}, #{ID}, #{REQ_UID}, #{CUST_ID}, #{RTN_TYPE}, #{RES_CD}, #{RES_DATE}, 'N', #{DATA})
	        </when>
	        <otherwise>
	            VALUES (#{CAM_ID}, #{ID}, #{REQ_UID}, #{CUST_ID}, #{RTN_TYPE}, #{RES_CD}, #{RES_DATE}, NULL, #{DATA})
	        </otherwise>
	    </choose>
	</insert>
	
	<!-- 캠페인 성공, 오픈, 클릭 카운트 증가 -->
	<update id="plusResultCnt" parameterType="java.util.Map">
	    <choose>
	        <when test='RTN_TYPE.equals("S") and RES_CD.equals("1000")'>
	            UPDATE PUSH_CAMPAIGNS
	            SET SUCCESS_CNT = SUCCESS_CNT + 1
	            WHERE CAM_ID = #{CAM_ID}
	        </when>
	        <when test='RTN_TYPE.equals("R")'>
	            UPDATE PUSH_CAMPAIGNS
	            SET OPEN_CNT = OPEN_CNT + 1
	            WHERE CAM_ID = #{CAM_ID}
	        </when>
	        <when test='RTN_TYPE.equals("C")'>
	            UPDATE PUSH_CAMPAIGNS
	            SET CLICK_CNT = CLICK_CNT + 1
	            WHERE CAM_ID = #{CAM_ID}
	        </when>
	        <when test='RTN_TYPE.equals("S") and !RES_CD.equals("1000")'>
	            UPDATE PUSH_CAMPAIGNS
	            SET FAIL_CNT = FAIL_CNT + 1
	            WHERE CAM_ID = #{CAM_ID}
	        </when>
	        <otherwise>
	            UPDATE PUSH_CAMPAIGNS
	            SET TARGET_CNT = TARGET_CNT
	            WHERE CAM_ID = #{CAM_ID}
	        </otherwise>
	    </choose>
	</update>
	
	<!-- report 리스트 -->
	<select id="getReportList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT CAM_ID, PUSH_TITLE, TARGET_CNT, SUCCESS_CNT, OPEN_CNT, CLICK_CNT, SMS_YN 
	    FROM PUSH_CAMPAIGNS
		WHERE USER_ID = #{userId}
		ORDER BY REQ_DATE DESC
		LIMIT #{limit}, 5
	</select>
	
	<select id="allReportSize" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(CAM_ID)
		FROM PUSH_CAMPAIGNS
		WHERE USER_ID = #{userId}
	</select>
	
	<!-- report 상세 화면 -->
	<select id="getDetailReport" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT CAM_ID, PUSH_TITLE, POPUP_CONTENT, PUSH_MSG, INAPP_CONTENT, REQ_DATE, 
			   TARGET_CNT, SUCCESS_CNT, OPEN_CNT, SUCCESS_CNT - OPEN_CNT NOOPEN_CNT, 
      		   FAIL_CNT, CLICK_CNT, SMS_YN, SMS_SUCCESS_CNT, SMS_FAIL_CNT
		FROM PUSH_CAMPAIGNS
		WHERE CAM_ID = #{camId}
		AND USER_ID = #{userId};
	</select>
	
	<!-- report 타겟 대상자 화면 -->
	<select id="getTargetList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT d.CUST_ID, a.PHONE_NUM, a.OS_VER, a.DEVICE, a.APP_VER, RTN_TYPE
		FROM push_detail d
		JOIN app_users a ON d.CUST_ID = a.CUST_ID
		JOIN push_campaigns p on p.CAM_ID = d.CAM_ID
		WHERE d.CAM_ID = #{camId}
		AND RTN_TYPE = 'N'
		AND USER_ID = #{userId}
		ORDER BY detail_id DESC
		LIMIT #{limit}, 5		
	</select>
	
	<select id="allTargetSize" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(c.CAM_ID) 
		FROM push_detail d
		JOIN push_campaigns c ON c.CAM_ID = d.CAM_ID 
		WHERE c.CAM_ID = #{camId}
		AND USER_ID = #{userId}
		AND RTN_TYPE = 'N';
	</select>
	
	<!-- MAX detail_id 가져오기 -->
	<select id="getMaxDetailId" resultType="int">
	    SELECT MAX(DETAIL_ID)
		FROM SMS_DETAIL;
	</select>
    
	<!-- report 성공 대상자 화면 -->
	<select id="getSuccessList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT d.CUST_ID, a.PHONE_NUM, a.OS_VER, a.DEVICE, a.APP_VER, RTN_TYPE, DATE_FORMAT(RES_DATE, '%Y-%m-%d %H:%i:%s') RES_DATE
		FROM push_detail d
		JOIN app_users a ON d.CUST_ID = a.CUST_ID
		JOIN push_campaigns p on p.CAM_ID = d.CAM_ID
		WHERE d.CAM_ID = #{camId}
		AND RTN_TYPE = 'S'
		AND RES_CD = 1000
		AND USER_ID = #{userId}
		ORDER BY detail_id DESC
		LIMIT #{limit}, 5		
	</select>
	
	<select id="allSuccessSize" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(c.CAM_ID) 
		FROM push_detail d
		JOIN push_campaigns c ON c.CAM_ID = d.CAM_ID 
		WHERE c.CAM_ID = #{camId}
		AND USER_ID = #{userId}
		AND RTN_TYPE = 'S'
		AND RES_CD = 1000
	</select>
	
	<!-- report 실패 대상자 가져오기 -->
	<select id="getFailList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT P.CUST_ID, DATE_FORMAT(P.RES_DATE, '%Y-%m-%d %H:%i:%s') RES_DATE, A.OS_VER, A.DEVICE, A.APP_VER, P.RES_CD
		FROM APP_USERS A
		JOIN (SELECT PD.CUST_ID, PD.RES_DATE, PD.RES_CD, PD.DETAIL_ID
				FROM PUSH_CAMPAIGNS PC JOIN PUSH_DETAIL PD
				ON PC.CAM_ID = PD.CAM_ID
				WHERE USER_ID = #{userId}
				AND PD.CAM_ID = #{camId}
				AND PD.RTN_TYPE = 'S'
				AND PD.RES_CD != 1000) P
		ON A.CUST_ID = P.CUST_ID
		ORDER BY P.DETAIL_ID DESC
		LIMIT #{limit}, 5
	</select>
	
	<!-- 실패 총 개수 -->
	<select id="allFailSize" parameterType="java.util.Map" resultType="int">
	    SELECT COUNT(c.CAM_ID) 
		FROM push_detail d
		JOIN push_campaigns c 
		ON c.CAM_ID = d.CAM_ID 
		WHERE c.CAM_ID = #{camId}
		AND USER_ID = #{userId}
		AND RTN_TYPE = 'S'
		AND RES_CD != 1000
	</select>
	
	<!-- report 오픈 대상자 화면 -->
	<select id="getOpenList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT R.CUST_ID, DATE_FORMAT(S.RES_DATE, '%Y-%m-%d %H:%i:%s') RES_DATE_S, DATE_FORMAT(R.RES_DATE, '%Y-%m-%d %H:%i:%s') RES_DATE_R, A.OS_VER, A.DEVICE, A.APP_VER
		FROM push_campaigns P
		JOIN 
			(SELECT * FROM push_detail WHERE RTN_TYPE = 'S' AND RES_CD=1000) S
			ON p.CAM_ID = S.CAM_ID
		JOIN
			(SELECT * FROM push_detail WHERE RTN_TYPE = 'R') R 
			ON p.CAM_ID = R.CAM_ID
			AND S.CUST_ID = R.CUST_ID
		JOIN app_users A
			ON A.CUST_ID = R.CUST_ID
		WHERE P.CAM_ID = #{camId}
		AND USER_ID = #{userId}
		ORDER BY R.DETAIL_ID DESC	
		LIMIT #{limit}, 5	
	</select>
	
	<select id="allOpenSize" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(c.CAM_ID) 
		FROM push_detail d
		JOIN push_campaigns c ON c.CAM_ID = d.CAM_ID 
		WHERE c.CAM_ID = #{camId}
		AND USER_ID = #{userId}
		AND RTN_TYPE = 'R';
	</select>
	
	<!-- report 미오픈 대상자 화면 -->
	<select id="getNoOpenList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT D.CUST_ID, DATE_FORMAT(D.RES_DATE, '%Y-%m-%d %H:%i:%s') RES_DATE, A.OS_VER, A.DEVICE, A.APP_VER
		FROM push_campaigns P
		JOIN push_detail D
			ON P.CAM_ID = D.CAM_ID
		JOIN 
			(select MAX(DETAIL_ID) DETAIL_ID, CAM_ID
			FROM push_detail
			WHERE CAM_ID = #{camId}
			GROUP BY CUST_ID) M
			ON P.CAM_ID = M.CAM_ID
		 	AND D.DETAIL_ID = M.DETAIL_ID
		JOIN app_users A
			ON A.CUST_ID = D.CUST_ID
		WHERE P.CAM_ID = #{camId}
		AND P.USER_ID = #{userId} 
		AND D.RTN_TYPE = 'S' 
		AND D.RES_CD = 1000
		ORDER BY D.DETAIL_ID DESC
		LIMIT #{limit}, 5	
	</select>
	
	<select id="allNoOpenSize" parameterType="java.util.Map" resultType="int">
		SELECT COUNT(D.CAM_ID)
		FROM push_campaigns P
		JOIN push_detail D
		ON P.CAM_ID = D.CAM_ID
		JOIN 
			(select MAX(DETAIL_ID) DETAIL_ID, CAM_ID
			FROM push_detail
			WHERE CAM_ID = #{camId}
			GROUP BY CUST_ID) M
			ON P.CAM_ID = M.CAM_ID
			AND D.DETAIL_ID = M.DETAIL_ID
		WHERE P.CAM_ID = #{camId}
		AND D.RTN_TYPE = 'S' 
		AND D.RES_CD = 1000
		AND P.USER_ID = #{userId};
	</select>
	
	<!-- report SMS 성공 대상자 리스트 -->
	<select id="getSmsSuccessList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT S.CUST_ID, S.SEND_TO, S.REQ_DATE
		FROM PUSH_CAMPAIGNS P 
		JOIN SMS_DETAIL S
		ON P.CAM_ID = S.CAM_ID
		WHERE P.USER_ID = #{userId}
		AND S.CAM_ID = #{camId}
		AND S.RSLT_CODE = 100
		ORDER BY S.DETAIL_ID DESC
		LIMIT #{limit}, 5
	</select>
	
	<!-- report SMS 성공 대상자 개수 -->
	<select id="smsSuccessSize" parameterType="java.util.Map" resultType="int">
	    SELECT COUNT(*)
		FROM PUSH_CAMPAIGNS P 
		JOIN SMS_DETAIL S
		ON P.CAM_ID = S.CAM_ID
		WHERE P.USER_ID = #{userId}
		AND S.CAM_ID = #{camId}
		AND S.RSLT_CODE = 100
	</select>
	
	<!-- report SMS 실패 대상자 리스트 -->
	<select id="getSmsFailList" parameterType="java.util.Map" resultType="java.util.Map">
	    SELECT S.CUST_ID, S.SEND_TO, S.REQ_DATE, S.RSLT_CODE2
		FROM PUSH_CAMPAIGNS P 
		JOIN SMS_DETAIL S
		ON P.CAM_ID = S.CAM_ID
		WHERE P.USER_ID = #{userId}
		AND S.CAM_ID = #{camId}
		AND S.RSLT_CODE IS NULL
		ORDER BY S.DETAIL_ID DESC
		LIMIT #{limit}, 5
	</select>
	
	<!-- report SMS 실패 대상자 개수 -->
	<select id="smsFailSize" parameterType="java.util.Map" resultType="int">
	    SELECT COUNT(*)
		FROM PUSH_CAMPAIGNS P 
		JOIN SMS_DETAIL S
		ON P.CAM_ID = S.CAM_ID
		WHERE P.USER_ID = #{userId}
		AND S.CAM_ID = #{camId}
		AND S.RSLT_CODE IS NULL
	</select>
	
	<!-- SMS 발송할 정보 가져오기 -->
	<select id="getSMSInfo" parameterType="int" resultType="java.util.Map">
	    SELECT DISTINCT P.CAM_ID, P.DETAIL_ID, A.PHONE_NUM 'SEND_TO', P.CUST_ID, P.SMS_CONTENT, P.PHONE_NUM 'SEND_FROM'
		FROM APP_USERS A 
		RIGHT JOIN (SELECT PD.CAM_ID, PD.DETAIL_ID, PD.CUST_ID, PC.SMS_CONTENT, PC.PHONE_NUM
						FROM PUSH_CAMPAIGNS PC RIGHT JOIN PUSH_DETAIL PD
						ON PC.CAM_ID = PD.CAM_ID
						WHERE PD.DETAIL_ID > #{maxDetailId}
						AND PC.SMS_YN = 'Y'
						AND PD.SMS_SEND_YN = 'N'
						AND PD.RES_CD != '1000') P
		ON A.CUST_ID = P.CUST_ID
	</select>
	
	<!-- 문자 INSERT -->
	<insert id="insertSMS" parameterType="java.util.Map">
		INSERT INTO MSG_DATA (CUR_STATE, REQ_DATE, CALL_TO, CALL_FROM, SMS_TXT, MSG_TYPE, MSG_ETC1, MSG_ETC2, MSG_ETC3) 
		VALUES (0, SYSDATE(), #{SEND_TO}, #{SEND_FROM}, #{SMS_CONTENT}, 4, 'push2u', #{CAM_ID}, #{CUST_ID})
	</insert>
	
	<!-- SMS DETAIL INSERT -->
	<insert id="insertSmsDetail" parameterType="java.util.Map">
	    INSERT INTO SMS_DETAIL (CAM_ID, DETAIL_ID, SEND_TO, SEND_FROM, CUST_ID, REQ_DATE)
		VALUES (#{CAM_ID}, #{DETAIL_ID}, #{SEND_TO}, #{SEND_FROM}, #{CUST_ID}, SYSDATE())
	</insert>
	
	<!-- SMS 발송 플래그 UPDATE -->
	<update id="updateSmsFlag" parameterType="int">
	    UPDATE PUSH_DETAIL
		SET SMS_SEND_YN = 'Y'
		WHERE DETAIL_ID = #{detailId}
	</update>
	
	<!-- 로컬 SMS_DETAIL 테이블 MAX MSG_ID -->
	<select id="getMaxMsgId" resultType="int">
		SELECT MAX(MSG_ID)
		FROM sms_detail
	</select>
	
	<!-- 아이하트 SMS 로그 리스트 가져오기 -->
	<select id="getSmsLogList" parameterType="int" resultType="java.util.Map">
		SELECT MSG_SEQ, RSLT_CODE, RSLT_CODE2, CALL_TO, CALL_FROM, MSG_ETC2, MSG_ETC3  
		FROM MSG_LOG_201602
		WHERE MSG_ETC1 = 'push2u'
		AND MSG_SEQ > #{maxMsgId}
		ORDER BY MSG_SEQ
	</select>
	
	<!-- SMS_DETAIL 로그 UPDATE -->
	<update id="updateSmsDetail" parameterType="java.util.Map">
	    UPDATE sms_detail
		SET RSLT_CODE = #{RSLT_CODE}
		, RSLT_CODE2 = #{RSLT_CODE2}
		, MSG_ID = #{MSG_SEQ}
		WHERE CAM_ID = #{MSG_ETC2}
		AND CUST_ID = #{MSG_ETC3}
	</update>
	
	<!-- 로컬 PUSH_CLICK_DETAIL 테이블 MAX CLICK_ID -->
	<select id="getMaxClickId" resultType="int">
	    SELECT IFNULL(MAX(CLICK_ID), 0)
		FROM push_click_detail
	</select>
	
	<!-- PMS CLICK_DETAIL 로그 리스트 가져오기 -->
	<select id="getClickLogList" parameterType="int" resultType="java.util.Map">
		SELECT ID, LINK_SEQ, LINK, MSG_PUSH_TYPE 
		FROM TB_CLICK
		WHERE ID > #{maxClickId}
		AND APP_ID = 344
		ORDER BY ID
	</select>
	
	<!-- CLICK DETAIL 로그 INSERT -->
	<insert id="insertClickDetail" parameterType="java.util.Map">
		INSERT INTO PUSH_CLICK_DETAIL(CLICK_ID, LINK_SEQ, LINK, MSG_PUSH_TYPE)
		VALUES (#{ID}, #{LINK_SEQ}, #{LINK}, #{MSG_PUSH_TYPE})
	</insert>
	
	<!-- SMS 결과 카운트 UPDATE -->
	<update id="plusSmsCnt" parameterType="java.util.Map">
		<choose>
			<when test="RSLT_CODE == 100">
			    UPDATE PUSH_CAMPAIGNS
				SET SMS_SUCCESS_CNT = SMS_SUCCESS_CNT + 1
				WHERE CAM_ID = #{MSG_ETC2}
			</when>
			<otherwise>
			    UPDATE PUSH_CAMPAIGNS
				SET SMS_FAIL_CNT = SMS_FAIL_CNT + 1
				WHERE CAM_ID = #{MSG_ETC2}
			</otherwise>
		</choose>	    
	</update>
		
	<!-- CLICK 인앱 메세지 상세 가져오기-->
	<select id="getClickMessageList" parameterType="int" resultType="java.util.Map">
		SELECT LINK.LINK_SEQ, LINK.LINK, LINK.CLICK_COUNT, IFNULL(IMG.IMG_URL, '') IMG_URL
		FROM
		  (SELECT 'M' PUSH_TYPE, LINK_SEQ, COUNT(LINK_SEQ) CLICK_COUNT, LINK, D.CAM_ID
		  FROM push_detail D
		  JOIN push_click_detail C
		  ON D.DATA = C.CLICK_ID
		  WHERE D.CAM_ID = #{camId}
		  AND C.MSG_PUSH_TYPE = 'M'
		  GROUP BY LINK_SEQ, LINK) LINK
		LEFT OUTER JOIN img_detail IMG
		ON LINK.PUSH_TYPE = IMG.PUSH_TYPE
		AND LINK.LINK_SEQ = IMG.LINK_SEQ
		AND LINK.CAM_ID = IMG.CAM_ID
	</select>
	
	<!-- CLICK 팝업 상세 가져오기-->
	<select id="getClickPopupList" parameterType="int" resultType="java.util.Map">
		SELECT LINK.LINK_SEQ, LINK.LINK, LINK.CLICK_COUNT, IFNULL(IMG.IMG_URL, '') IMG_URL
		FROM
		  (SELECT 'P' PUSH_TYPE, LINK_SEQ, COUNT(LINK_SEQ) CLICK_COUNT, LINK, D.CAM_ID
		  FROM push_detail D
		  JOIN push_click_detail C
		  ON D.DATA = C.CLICK_ID
		  WHERE D.CAM_ID = #{camId}
		  AND C.MSG_PUSH_TYPE = 'P'
		  GROUP BY LINK_SEQ, LINK) LINK
		LEFT OUTER JOIN img_detail IMG
		ON LINK.PUSH_TYPE = IMG.PUSH_TYPE
		AND LINK.LINK_SEQ = IMG.LINK_SEQ
		AND LINK.CAM_ID = IMG.CAM_ID
	</select>
	
	<!-- IMG DETAIL INSERT -->
	<insert id="insertImgDetail" parameterType="java.util.Map">
		INSERT INTO IMG_DETAIL (CAM_ID, PUSH_TYPE, LINK_SEQ, IMG_URL)
		VALUES(#{camId}, #{pushType}, #{linkSeq}, #{imgUrl})
	</insert>
</mapper>